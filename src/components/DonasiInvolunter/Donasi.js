import axios from 'axios'
import { API_URL } from 'config/api'
import { useEffect } from 'react'
import { useState } from 'react'
import { Link, useHistory, useParams } from 'react-router-dom'
import splitInDots from 'utils/splitDots'
import Switch from 'react-switch'
import Spinner from 'components/loaders/Spinner'
import { useContext } from 'react'
import { UserContext } from 'context/UserContext'
import {
  getDataDonasi,
  getReferal,
  getToken,
  removeDataDonasi,
  setDataDonasi,
  setDonasiBalanceBerhasil,
  setIdTransaksi,
  setSlug,
} from 'utils/cookiesHooks'
import { METODE_PEMBAYARAN } from 'config/metodePembayaran'
import IdrFormat from 'utils/IdrFormat'

function Donasi() {
  const [data, setData] = useState([])
  const [checked, setChecked] = useState(false)
  const [checked2, setChecked2] = useState(false)
  const [characterCount, setCharacterCount] = useState(0)
  const [active, setActive] = useState(0)
  const [referalStatus, setReferalStatus] = useState('pending')
  const [pilihanMetode, setPilihanMetode] = useState(false)
  const [namaLengkap, setNamaLengkap] = useState('')
  const [email, setEmail] = useState('')
  const [noHp, setNoHp] = useState('')
  const [referal, setReferal] = useState('')
  const [pesan, setPesan] = useState('')
  const [value, setValue] = useState('')
  const [method, setMethod] = useState('')
  const [click, setClick] = useState(false)

  const user = useContext(UserContext)
  const { slug } = useParams()
  const history = useHistory()

  const temp = getDataDonasi() ? JSON.parse(getDataDonasi()) : ''

  useEffect(() => {
    getData()
  }, []) // eslint-disable-line react-hooks/exhaustive-deps

  const getData = async () => {
    let gettingData = await axios.get(
      `${API_URL}/api/galangdana/byslug/${slug}`
    )
    let response = await gettingData.data

    setData(response.data.campaign[0])
  }

  useEffect(() => {
    setReferalStatus('pending')
    const delayDebounceFn = setTimeout(
      async () => {
        let getData = await axios.get(
          `${API_URL}/api/donation/checkreferal?referal=${referal}`
        )
        let response = await getData.data.status
        if (response === 202) {
          setReferalStatus('invalid')
        } else if (response === 201) {
          setReferalStatus('success')
        } else {
          setReferalStatus('invalid')
        }
      },
      referal ? 0 : 500
    )
    return () => clearTimeout(delayDebounceFn)
  }, [referal]) // eslint-disable-line react-hooks/exhaustive-deps

  const handleChange = (e) => {
    const result = temp.value
      ? temp.value.replace(/\D/g, '')
      : e.target.value.replace(/\D/g, '')
      ? e.target.value.replace(/\D/g, '')
      : ''

    if (result === '10000') {
      setActive(1)
    } else if (result === '20000') {
      setActive(2)
    } else if (result === '50000') {
      setActive(3)
    } else {
      setActive(444)
    }

    if (temp.value) {
      setValue(splitInDots(result))
    } else {
      setValue(e.target.validity.valid ? IdrFormat(result) : '')
    }
  }

  function pilihMetode(pilih) {
    setChecked2(false)
    let select =
      !temp.method &&
      METODE_PEMBAYARAN.find(
        (pembayaran) =>
          pembayaran.metode === pilih.metode && pembayaran.nama === pilih.nama
      )
    if (temp.method) {
      setMethod(temp.method)
    } else {
      setMethod(select)
      handlePilihanMetode()
    }
  }

  if (active === 0) {
    if (temp.value) {
      handleChange()
    }
    if (temp.method) {
      pilihMetode()
    }
  }

  setTimeout(() => {
    removeDataDonasi()
  }, 100)

  const handleChangeReferal = (e) => {
    const result = e.target.value.toUpperCase()
    setReferal(result)
  }

  const handleChangePhoneNumber = (e) => {
    const result = e.target.value.replace(/\D/g, '')
    setNoHp(result)
  }

  function handlePilihanMetode() {
    if (pilihanMetode === false) {
      setPilihanMetode(true)
    } else {
      setPilihanMetode(false)
    }
  }

  function nominal() {
    if (method.metode === 'transfer_manual') {
      return (
        parseInt(value.replaceAll('.', '')) +
        Math.floor(Math.random() * 200) +
        1
      )
    } else {
      return parseInt(value.replaceAll('.', ''))
    }
  }

  const handleOnSubmit = async (e) => {
    setClick(true)
    e.preventDefault()

    await axios
      .post(
        `${API_URL}/api/donation${
          method.metode === 'cod' || method.metode === 'transfer_manual'
            ? ''
            : `/${method.metode}`
        }?nominal=${nominal()}&metode=${
          method.metode === 'transfer_manual' ? 'manual' : method.metode
        }&nama_lengkap=${
          user.user.name ? user.user.name : namaLengkap
        }&alamat_email=${
          user.user.email ? user.user.email : email
        }&nomor_ponsel=${
          user.user.phone ? user.user.phone : noHp
        }&kode_referensi=${
          getReferal() || referal
        }&pesan_baik=${pesan}&user_id=${
          user.user.id && !checked ? user.user.id : 1
        }&campaign_id=${data.id}${
          method.metode === 'bank_transfer'
            ? `&bank_name=${method.nama}`
            : method.metode === 'emoney'
            ? `&emoney_name=${method.nama}`
            : ''
        }`
      )
      .then((response) => {
        if (method.metode === 'balance') {
          setDonasiBalanceBerhasil()
          history.push({
            pathname: `/donasi-sekali/${slug}/jumlah-donasi/berhasil`,
          })
        } else {
          setIdTransaksi(
            method.metode === 'cod'
              ? response.data.data.donasi.kode_donasi
              : response.data.data.kode_donasi
          )
          history.push({
            pathname: `/donasi-sekali/${slug}/jumlah-donasi/pembayaran`,
          })
        }
      })
      .catch((err) => {
        console.log(err)
      })
  }

  const handleOnLogin = (e) => {
    const data = {
      value: value,
      method: method,
    }
    setSlug(slug)
    setDataDonasi(data)
    history.push(`/login`)
  }

  function validator() {
    const re =
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    if (!getToken()) {
      if (
        method.metode === 'emoney' ||
        method.metode === 'shopeepay' ||
        method.metode === 'dana'
      ) {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 100 &&
          method &&
          namaLengkap &&
          re.test(String(email).toLowerCase())
        )
      } else if (method.nama === 'tunai') {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 5000 &&
          method &&
          namaLengkap &&
          re.test(String(email).toLowerCase()) &&
          (referalStatus === 'success' || getReferal())
        )
      } else {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 10000 &&
          method &&
          namaLengkap &&
          re.test(String(email).toLowerCase())
        )
      }
    } else {
      if (
        method.metode === 'emoney' ||
        method.metode === 'shopeepay' ||
        method.metode === 'dana'
      ) {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 100 && method
        )
      } else if (method.nama === 'tunai') {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 100 &&
          method &&
          (referalStatus === 'success' || getReferal())
        )
      } else if (method.metode === 'balance') {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 100 &&
          method &&
          user?.user?.balance?.amount >= parseInt(value.replaceAll('.', ''))
        )
      } else {
        return (
          (value ? parseInt(value.replaceAll('.', '')) : 0) >= 10000 && method
        )
      }
    }
  }

  if (method.nama === 'tunai') {
    if (!checked2) {
      setChecked2(true)
    }
  }

  useEffect(() => {
    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' })
  }, [])

  return (
    <>
      {pilihanMetode ? (
        <div className="w-screen h-screen flex justify-center">
          <div className="container top-y-10  mx-auto max-w-[430px] h-screen">
            <div
              className="fixed z-50 top-0 bg-white"
              style={{
                boxShadow: '0 5px 5px -5px rgb(0 0 0 / 0.1)',
              }}
            >
              <div className="w-[430px]">
                <div className="mx-[20px] inline-flex items-center h-[72px]">
                  <div
                    onClick={() => handlePilihanMetode()}
                    className="cursor-pointer"
                  >
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M9.57 5.92999L3.5 12L9.57 18.07"
                        stroke="#292D32"
                        strokeWidth="1.5"
                        strokeMiterlimit="10"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M20.4999 12H3.66992"
                        stroke="#292D32"
                        strokeWidth="1.5"
                        strokeMiterlimit="10"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  </div>
                  <span className=" relative ml-[16px] text-[16px] leading-[21.79px] font-medium mt-1">
                    Metode Pembayaran
                  </span>
                </div>
              </div>
            </div>
            <div className="bg-[#E4E4E44D] mt-[72px]">
              <p className="px-[20px] py-[22px] flex flex-col font-medium text-small">
                Pembayaran instan (verifikasi otomatis, minimal Rp100)
              </p>
            </div>
            <div
              className={`space-y-6 mx-[20px] my[24px] ${
                nominal() >= 100 ? '' : 'opacity-20 pointer-events-none'
              }`}
            >
              {getToken() && data && (
                <>
                  <div
                    className="mt-[20px] flex flex-row items-center cursor-pointer"
                    onClick={() =>
                      pilihMetode({
                        metode: 'balance',
                        nama: 'dompet_peduli',
                      })
                    }
                  >
                    <div className="w-[60px] flex justify-center">
                      <svg
                        width={55}
                        height={13}
                        viewBox="0 0 55 13"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M10.157 7.77901C9.90956 8.0206 9.76814 8.36827 9.80349 8.7395C9.85653 9.3759 10.4399 9.84141 11.0763 9.84141H12.1959V10.5426C12.1959 11.7624 11.2 12.7582 9.98027 12.7582H3.2156C1.99584 12.7582 1 11.7624 1 10.5426V6.57694C1 5.35718 1.99584 4.36133 3.2156 4.36133H9.98027C11.2 4.36133 12.1959 5.35718 12.1959 6.57694V7.42547H11.0056C10.6756 7.42547 10.3751 7.55509 10.157 7.77901Z"
                          fill="#0288D1"
                        />
                        <path
                          d="M1 7.10729V4.41442C1 3.7132 1.43016 3.08856 2.08423 2.84108L6.76293 1.07331C7.49361 0.796356 8.27732 1.33849 8.27732 2.1222V4.36137"
                          stroke="#0288D1"
                          strokeWidth="1.5"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                        />
                        <path
                          d="M12.8197 8.02655V9.24046C12.8197 9.56455 12.5605 9.82969 12.2305 9.84147H11.0755C10.4391 9.84147 9.85577 9.37596 9.80274 8.73957C9.76738 8.36834 9.90881 8.02067 10.1563 7.77908C10.3743 7.55516 10.6748 7.42554 11.0048 7.42554H12.2305C12.5605 7.43732 12.8197 7.70246 12.8197 8.02655Z"
                          stroke="#0288D1"
                          strokeWidth="1.5"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                        />
                        <path
                          d="M3.65161 6.8656H7.77641"
                          stroke="white"
                          strokeWidth="1.5"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                        />
                        <path
                          fillRule="evenodd"
                          clipRule="evenodd"
                          d="M37.0176 1.02423C36.7041 1.11441 36.5145 1.31156 36.3965 1.66989C36.3615 1.77653 36.3557 1.9059 36.3451 2.83666C36.3335 3.84469 36.3315 3.88323 36.2921 3.87644C36.2696 3.87258 36.1358 3.82624 35.9948 3.77348C35.4895 3.58447 35.1763 3.52364 34.7083 3.52364C34.3309 3.52364 34.092 3.56015 33.7743 3.66634C33.0069 3.92288 32.2467 4.54582 31.8202 5.26763C31.5171 5.78043 31.3993 6.2701 31.4217 6.92328C31.4355 7.32578 31.4777 7.56673 31.6 7.93999C31.9859 9.11802 33.0052 9.97378 34.2503 10.1651C34.5271 10.2076 35.0497 10.2062 35.3266 10.1622C35.6247 10.1148 35.9375 10.0189 36.2157 9.88964C36.3696 9.81813 36.4611 9.78711 36.4883 9.79721C36.5108 9.80559 36.5814 9.85847 36.645 9.91474C36.9456 10.1806 37.2713 10.2325 37.6187 10.07C37.8916 9.94228 38.0624 9.71342 38.1097 9.41205C38.1416 9.20844 38.1405 1.85349 38.1085 1.68035C38.0587 1.41064 37.8886 1.1794 37.6568 1.06595C37.5527 1.01505 37.5022 1.00506 37.326 1.00059C37.2023 0.997451 37.0775 1.00703 37.0176 1.02423ZM46.8825 1.03734C46.5636 1.10514 46.3239 1.38753 46.2543 1.77742C46.2091 2.03076 46.2095 9.13961 46.2547 9.37595C46.3577 9.91382 46.7527 10.2138 47.2551 10.1355C47.6577 10.0729 47.8941 9.82654 47.9793 9.38105C48.0278 9.12755 48.0273 1.97639 47.9787 1.74622C47.9092 1.41666 47.7255 1.17576 47.4709 1.08046C47.3299 1.0277 47.0309 1.00578 46.8825 1.03734ZM27.0097 3.53729C26.2939 3.62802 25.5932 3.94434 25.0441 4.42463C24.3526 5.0295 24.0001 5.83224 24.0001 6.80211C24.0001 7.99024 24.4485 8.93005 25.3105 9.54844C25.7174 9.84037 26.3369 10.1018 26.8243 10.1873C27.1208 10.2393 27.6442 10.2395 27.9366 10.1878C28.5681 10.0761 29.1402 9.78635 29.573 9.35907C29.8443 9.09119 29.9216 8.93812 29.9203 8.671C29.9196 8.51415 29.9106 8.46816 29.8625 8.37612C29.7944 8.24573 29.6701 8.11666 29.5505 8.0523C29.4783 8.01348 29.4274 8.00548 29.256 8.00605C29.0075 8.00685 28.8806 8.04508 28.451 8.24874C27.8424 8.5372 27.4715 8.59504 27.0143 8.4728C26.7113 8.39178 26.4488 8.22468 26.251 7.98694C26.1588 7.87613 25.9847 7.55916 25.9847 7.50217C25.9847 7.4779 26.2176 7.47491 27.3532 7.48451C28.1059 7.49088 28.9974 7.48782 29.3343 7.47773L29.9469 7.45936L30.1085 7.37946C30.3082 7.28073 30.4576 7.13489 30.5488 6.94958C30.8457 6.34641 30.2951 4.98181 29.4813 4.30407C29.0396 3.93622 28.5727 3.70588 28.0281 3.58704C27.8315 3.54416 27.1992 3.51328 27.0097 3.53729ZM19.4311 3.5591C19.1437 3.60242 18.9427 3.65284 18.6111 3.7648C18.3972 3.83699 18.1895 3.89417 18.1422 3.89391C18.0256 3.89326 17.8791 3.82269 17.7673 3.71331L17.6737 3.62178H17.3854C17.1035 3.62178 17.0938 3.6234 16.9513 3.69347C16.7165 3.80886 16.5554 4.02424 16.4871 4.3138C16.4385 4.51965 16.4385 11.8618 16.4871 12.0677C16.5252 12.2292 16.6037 12.3917 16.6926 12.4929C16.8368 12.6573 17.1242 12.7454 17.4263 12.7181C17.8327 12.6812 18.0564 12.5244 18.1828 12.1877C18.2285 12.0659 18.2303 12.0267 18.2376 10.9768C18.2417 10.3801 18.2481 9.89184 18.2517 9.89184C18.2554 9.89184 18.4879 9.95009 18.7684 10.0213C19.429 10.189 19.6941 10.228 20.0636 10.2123C20.4999 10.1936 20.8965 10.083 21.3443 9.85509C21.6704 9.68911 21.9227 9.50486 22.1899 9.23757C22.6916 8.73588 23.0116 8.11895 23.1302 7.42462C23.1697 7.19343 23.1747 7.09864 23.1646 6.76226C23.1483 6.21512 23.0714 5.88441 22.8535 5.4232C22.4231 4.51217 21.5452 3.83126 20.515 3.60937C20.3549 3.57491 20.2053 3.56205 19.9 3.55653C19.6781 3.55252 19.4671 3.55367 19.4311 3.5591ZM43.9848 3.56702C43.7526 3.61578 43.489 3.82029 43.3697 4.04422C43.2297 4.30686 43.2307 4.29365 43.2151 6.00986C43.2011 7.54789 43.2003 7.57096 43.1527 7.69828C43.0077 8.08657 42.6789 8.35929 42.2879 8.41562C42.1588 8.4342 42.0944 8.43184 41.9488 8.40314C41.5408 8.32278 41.2556 8.07817 41.1163 7.68914L41.0656 7.54738L41.0544 6.00986C41.0442 4.61332 41.0395 4.45732 41.003 4.30876C40.9153 3.95162 40.7667 3.75061 40.5186 3.65347C40.4081 3.61022 40.3485 3.60272 40.106 3.60146C39.8496 3.6001 39.8134 3.60481 39.7277 3.65055C39.5234 3.75957 39.3537 3.99548 39.2857 4.26514C39.2434 4.43281 39.2412 7.73442 39.2832 8.01968C39.3788 8.66888 39.6443 9.18316 40.0613 9.52715C40.1384 9.59075 40.3027 9.70282 40.4263 9.77623C41.3035 10.2968 42.2298 10.3761 43.1743 10.0114C43.2823 9.96961 43.3925 9.93546 43.4192 9.93546C43.4458 9.93546 43.5209 9.97587 43.586 10.0252C43.8902 10.2559 44.1804 10.2898 44.5139 10.1337C44.7919 10.0037 44.9607 9.76365 45.0039 9.43689C45.0179 9.3305 45.0236 8.37187 45.0194 6.78407L45.013 4.29786L44.9638 4.1561C44.8464 3.81765 44.5556 3.58931 44.2035 3.55908C44.133 3.553 44.0345 3.55659 43.9848 3.56702ZM53.82 3.60819C53.5643 3.70309 53.3781 3.88696 53.2635 4.15789L53.2135 4.27605L53.2004 5.88991C53.1863 7.63004 53.1874 7.61434 53.0675 7.84942C52.8704 8.23563 52.3006 8.49483 51.8552 8.40085C51.4614 8.31778 51.1658 8.03435 51.0506 7.62954C51.0199 7.52171 51.0125 7.30001 50.9985 6.07528C50.9892 5.26414 50.9717 4.56445 50.9579 4.45626C50.9001 4.00147 50.7096 3.73857 50.3592 3.62981C50.1495 3.56471 49.8648 3.57882 49.6868 3.66309C49.5269 3.73881 49.3606 3.91867 49.2995 4.08182C49.1549 4.46825 49.1121 6.21802 49.2115 7.67985C49.2432 8.14597 49.331 8.49734 49.4999 8.83411C49.8333 9.49873 50.4888 9.97526 51.3157 10.154C51.807 10.2601 52.6336 10.2287 52.9095 10.0934L53.0281 10.0352L53.0766 10.0837C53.1462 10.1532 53.137 10.2697 53.0489 10.435C53.0093 10.5092 52.9383 10.6138 52.8911 10.6675C52.6626 10.9271 51.8198 11.1562 51.3298 11.0919C51.0917 11.0606 50.9873 11.0337 50.5181 10.8822C49.9185 10.6887 49.6476 10.6942 49.4134 10.9047C49.252 11.0499 49.1797 11.2227 49.1802 11.4621C49.1806 11.6116 49.1906 11.6679 49.2319 11.7528C49.4188 12.1375 50.1175 12.5497 50.8536 12.7095C51.0479 12.7517 51.1417 12.7578 51.5993 12.7582C52.0452 12.7587 52.1646 12.7515 52.4062 12.7096C52.7659 12.6473 53.2094 12.531 53.4203 12.4437C54.1996 12.1213 54.6896 11.5122 54.8777 10.6321C54.9939 10.0884 55.0082 9.62547 54.9968 6.76226C54.9881 4.56687 54.9855 4.44177 54.9454 4.27694C54.8723 3.97679 54.7082 3.76592 54.4492 3.63919C54.2859 3.55932 53.9909 3.54477 53.82 3.60819ZM35.1444 5.34942C35.587 5.45395 35.9776 5.76208 36.1799 6.16631C36.3077 6.42156 36.3294 6.54125 36.3172 6.92526C36.3087 7.19691 36.2988 7.26692 36.2477 7.41653C36.1615 7.66873 36.0741 7.80927 35.8874 7.99597C35.595 8.28843 35.307 8.40875 34.8609 8.42491C34.5175 8.43736 34.3316 8.40098 34.0649 8.26926C33.6163 8.04768 33.3291 7.64227 33.2341 7.09679C33.1901 6.84433 33.2042 6.63651 33.281 6.40682C33.4127 6.0128 33.7388 5.64499 34.1303 5.44889C34.4249 5.30131 34.7894 5.26556 35.1444 5.34942ZM20.0893 5.33533C20.5962 5.40475 20.986 5.67465 21.1973 6.10276C21.3238 6.35904 21.3659 6.55739 21.3649 6.89312C21.3631 7.54937 21.0791 8.01614 20.5216 8.27931C20.2983 8.38469 20.0715 8.43064 19.7747 8.43064C19.4913 8.43064 19.3439 8.39677 19.0931 8.2741C18.942 8.20023 18.8712 8.14676 18.7104 7.98535C18.3866 7.66031 18.2594 7.34375 18.2584 6.8604C18.2574 6.40761 18.3871 6.08248 18.6891 5.78014C19.0516 5.41724 19.5443 5.26072 20.0893 5.33533ZM27.7839 5.38651C28.1063 5.47635 28.3948 5.6795 28.5914 5.95501C28.6451 6.0302 28.689 6.09783 28.689 6.10531C28.689 6.11279 28.0805 6.1189 27.3368 6.1189C26.5932 6.1189 25.9847 6.11295 25.9847 6.10568C25.9847 6.08285 26.1183 5.91656 26.2337 5.79567C26.4369 5.5829 26.6889 5.42954 26.9385 5.36669C27.1068 5.32432 27.6024 5.33594 27.7839 5.38651Z"
                          fill="#1D1819"
                        />
                      </svg>
                    </div>
                    <p className="ml-[30px] text-sm font-normalnormal">
                      Dompet Peduly
                    </p>
                  </div>
                  <hr style={{ border: '0.5px solid #E4E4E480' }} />
                </>
              )}

              <div
                className="mt-[20px] flex flex-row items-center cursor-pointer"
                onClick={() => pilihMetode({ metode: 'emoney', nama: 'gopay' })}
              >
                <div className="w-[60px] flex justify-center">
                  <svg
                    width={54}
                    height={13}
                    viewBox="0 0 54 13"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.22895 12.4579C9.6691 12.4579 12.4579 9.6691 12.4579 6.22895C12.4579 2.78879 9.6691 0 6.22895 0C2.78879 0 0 2.78879 0 6.22895C0 9.6691 2.78879 12.4579 6.22895 12.4579Z"
                      fill="#02AFD9"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M2.62897 7.62638C2.70003 8.6448 3.3395 9.42638 4.52371 9.49743C5.66055 9.5448 6.77371 9.5448 7.91055 9.49743C8.95266 9.42638 9.73424 8.6448 9.80529 7.62638C9.85266 7.10532 9.87634 6.58427 9.85266 6.06322C9.59213 4.64217 8.40792 4.5948 8.31318 4.5948H8.2895H4.31055C4.16845 4.5948 4.05003 4.47638 4.05003 4.33427C4.05003 4.19217 4.16845 4.09743 4.31055 4.09743H8.31318C8.26581 3.15006 7.22371 2.96059 6.72634 2.9369H6.46582C5.82634 2.91322 5.16318 2.9369 4.52371 2.98427C3.31582 3.07901 2.70003 3.81322 2.62897 4.85532C2.55792 5.77901 2.55792 6.70269 2.62897 7.62638ZM8.62108 7.08164V7.4369C8.62108 7.55533 8.52634 7.65006 8.38424 7.65006C8.26581 7.65006 8.17108 7.55533 8.17108 7.4369V7.08164C8.05266 7.01059 7.9816 6.91585 7.9816 6.77375C7.9816 6.58427 8.17108 6.41848 8.38424 6.41848C8.59739 6.41848 8.78687 6.58427 8.78687 6.77375C8.78687 6.91585 8.71582 7.01059 8.62108 7.08164Z"
                      fill="#FEFEFE"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M43.8631 5.66054V6.79738C43.8631 6.79738 43.4604 7.55527 42.1341 7.72106C40.8078 7.91054 40.8078 7.08159 40.9025 6.86843C40.9973 6.65527 41.3052 6.37106 42.4183 6.18159C43.5788 5.99212 43.8631 5.66054 43.8631 5.66054ZM45.4262 4.57106V8.97633H43.9815V8.2658C43.5078 8.69212 42.8446 9.09475 41.921 9.14212C39.0315 9.21317 37.9183 6.0158 41.4236 5.06843C42.2525 4.83159 43.0578 4.90264 43.4841 4.68948C43.7683 4.52369 43.8394 4.26317 43.6499 4.02633C42.9394 3.07896 41.2341 3.4579 40.7604 4.76054L39.3157 4.40527C39.6946 2.96054 40.8552 2.32106 42.2525 2.17896C43.7446 2.03685 45.4262 2.84212 45.4262 4.57106ZM18.071 3.78948C17.0288 3.78948 16.1762 4.64212 16.1762 5.7079C16.1762 6.75001 17.0288 7.60264 18.071 7.60264C19.1131 7.60264 19.9657 6.75001 19.9657 5.7079C19.9657 4.64212 19.1131 3.78948 18.071 3.78948ZM21.8131 2.39212H19.9657V3.10264C19.3973 2.60527 18.6394 2.29738 17.7867 2.29738C15.9394 2.29738 14.4236 3.83685 14.4236 5.73159C14.4236 7.65001 15.9394 9.18948 17.7867 9.18948C18.6394 9.18948 19.3973 8.88159 19.9657 8.38422V9.02369C19.9657 10.0421 19.2315 10.8474 18.2131 10.8474C17.3604 10.8474 16.6736 10.6816 16.1052 10.0184L14.921 11.0842C15.892 12.1263 16.8631 12.4579 18.2367 12.4579C20.2262 12.4579 21.8131 11.1079 21.8131 8.83422V7.83948V2.39212ZM53.9999 2.27369H52.0578L50.1157 6.51317L47.8894 2.27369H45.9236L49.1446 8.31317L47.4394 11.8184H49.4052L53.9999 2.27369ZM34.8867 3.78948C35.9525 3.78948 36.8052 4.64212 36.8052 5.7079C36.8052 6.75001 35.9525 7.60264 34.8867 7.60264C33.8446 7.60264 32.992 6.75001 32.992 5.7079C32.992 4.64212 33.8446 3.78948 34.8867 3.78948ZM31.1683 2.39212H32.992V3.10264C33.5841 2.60527 34.342 2.29738 35.171 2.29738C37.0183 2.29738 38.5341 3.83685 38.5341 5.73159C38.5341 7.65001 37.0183 9.18948 35.171 9.18948C34.342 9.18948 33.5841 8.88159 32.992 8.38422V11.8184H31.1683V2.39212ZM26.2894 3.74212C27.4499 3.74212 28.3736 4.64212 28.3736 5.73159C28.3736 6.84475 27.4499 7.74475 26.2894 7.74475C25.1525 7.74475 24.2288 6.84475 24.2288 5.73159C24.2288 4.64212 25.1525 3.74212 26.2894 3.74212ZM26.2894 2.15527C28.3262 2.15527 29.9841 3.7658 29.9841 5.73159C29.9841 7.72106 28.3262 9.33159 26.2894 9.33159C24.2525 9.33159 22.5946 7.72106 22.5946 5.73159C22.5946 3.7658 24.2525 2.15527 26.2894 2.15527Z"
                      fill="#1D1819"
                    />
                  </svg>
                </div>
                <p className="ml-[30px] text-sm font-normalnormal">Go-Pay</p>
              </div>
              <hr style={{ border: '0.5px solid #E4E4E480' }} />
              <div
                className="flex flex-row items-center cursor-pointer"
                onClick={() =>
                  pilihMetode({ metode: 'emoney', nama: 'shopeepay' })
                }
              >
                <div className="w-[60px] flex justify-center">
                  <svg
                    width={54}
                    height={20}
                    viewBox="0 0 54 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M14.0359 0.00424767L0.594066 1.82396C0.594066 1.82396 0 1.89634 0 2.61998C0 3.34383 0 15.5818 0 15.5818C0 15.5818 0.0780653 17.0981 1.78886 17.0981C3.49964 17.0981 17.0229 17.0981 17.0229 17.0981C17.0229 17.0981 18.3808 16.7674 18.3808 15.3888C18.3808 14.0103 18.3808 4.69133 18.3808 4.69133C18.3808 4.69133 18.4078 3.17486 16.6156 3.17486C14.8234 3.17486 1.92463 3.17486 1.92463 3.17486C1.92463 3.17486 1.35437 3.07838 1.20842 2.46844C1.16426 2.22723 1.25935 2.20298 1.5105 2.20298C1.76166 2.20298 14.9999 2.20298 14.9999 2.20298V0.728062C14.9999 0.728062 14.9524 -0.0645733 14.0359 0.00424767Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M9.46308 14.8987C8.34813 14.8987 7.52749 14.4377 6.31711 13.2213C6.10126 13.0044 6.09949 12.6511 6.31314 12.4318C6.5268 12.2127 6.87485 12.2109 7.09079 12.4279C8.36514 13.7081 8.95719 14.0262 9.97511 13.7457C10.5668 13.5829 11.0978 12.8167 11.1289 11.9386C11.1529 11.2552 10.6787 10.8099 9.71893 10.615C7.99622 10.2651 6.97967 9.59607 6.69746 8.62635C6.46998 7.8452 6.7681 6.97361 7.51516 6.23497L7.54608 6.2067C9.15244 4.84338 11.0172 5.85913 11.7788 6.58685C11.9999 6.79826 12.0105 7.15146 11.8022 7.37599C11.5945 7.60048 11.2474 7.61114 11.0262 7.40103C10.9616 7.34011 9.51878 6.00898 8.26739 7.05009C7.83956 7.47936 7.64709 7.94916 7.75209 8.3099C7.90516 8.83552 8.68021 9.26532 9.93467 9.52013C12.0674 9.95323 12.2489 11.3836 12.228 11.9786C12.1822 13.274 11.1148 14.7251 10.113 14.8537C9.88353 14.8832 9.66832 14.8987 9.46308 14.8987Z"
                      fill="white"
                    />
                    <path
                      d="M24.0347 3.09879C23.8183 2.96411 23.5602 2.84376 23.253 2.75866C22.6876 2.59576 22.2758 2.38302 22.0803 2.11384C21.9058 1.87991 21.9058 1.5753 22.1151 1.18542C22.2339 0.951495 22.52 0.802664 22.89 0.774355C23.2738 0.746047 23.7415 0.838093 24.2302 1.09321C24.3489 1.15711 24.5025 1.10745 24.5652 0.979804C24.628 0.85945 24.5793 0.7035 24.4535 0.639764C23.8812 0.342101 23.3157 0.228697 22.8481 0.264125C22.3036 0.306673 21.8779 0.547718 21.6685 0.937426C21.3545 1.52563 21.3754 2.00739 21.6685 2.41133C21.9407 2.77273 22.4364 3.04926 23.1134 3.24057C23.3785 3.31849 23.6019 3.41776 23.7764 3.52402C24.0417 3.68699 24.2161 3.87836 24.2999 4.08389C24.3838 4.27525 24.3908 4.4878 24.3348 4.69333C24.307 4.79252 24.258 4.89178 24.2023 4.99103C24.2023 5.00513 24.1883 5.01931 24.1744 5.04056C23.9719 5.34536 23.6438 5.50123 23.2459 5.50123C22.8064 5.50123 22.2687 5.32411 21.6964 4.96977C21.6128 4.92012 21.536 4.87053 21.4662 4.82093C21.3475 4.74298 21.1939 4.77841 21.1171 4.89178C21.0403 5.01222 21.0752 5.16815 21.1869 5.2461C21.2777 5.30987 21.3613 5.35952 21.4243 5.4162C22.0803 5.82011 22.7015 6.01849 23.2319 6.01849C23.8044 6.01849 24.2791 5.79184 24.5793 5.33828C24.5861 5.32411 24.6001 5.2957 24.621 5.26742C24.7048 5.13274 24.7676 4.98388 24.8095 4.84212C24.9003 4.53032 24.8863 4.19724 24.7537 3.89253C24.628 3.59488 24.3908 3.31849 24.0347 3.09879Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M27.8804 2.53898C27.6222 2.46812 27.322 2.47524 27.0149 2.56728C26.7236 2.65458 26.4293 2.81816 26.1494 3.06475V0.505002C26.1494 0.37041 26.0377 0.264124 25.8982 0.264124C25.7584 0.264124 25.6467 0.37041 25.6467 0.505002V5.77053C25.6467 5.90514 25.7584 6.01148 25.8982 6.01148C26.0377 6.01148 26.1494 5.90514 26.1494 5.77053V3.79982C26.1539 3.79518 26.1591 3.79128 26.1633 3.78624C26.4775 3.3965 26.8264 3.15554 27.1614 3.04926C27.3777 2.98547 27.5803 2.97835 27.7547 3.02802C27.9224 3.07753 28.0549 3.16971 28.1526 3.30432C28.2504 3.44603 28.3062 3.63739 28.3062 3.87836V5.76345C28.3062 5.90521 28.4179 6.01849 28.5575 6.01849C28.6972 6.01849 28.8087 5.90521 28.8087 5.76345V3.87836C28.8087 3.53111 28.7181 3.24057 28.5575 3.01378C28.39 2.77273 28.1526 2.61695 27.8804 2.53898Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M32.1525 5.14691C31.9223 5.37369 31.6151 5.5154 31.273 5.5154C30.9312 5.5154 30.617 5.37369 30.3936 5.14691C30.1703 4.92012 30.0307 4.60115 30.0307 4.25399C30.0307 3.90675 30.1703 3.58786 30.3936 3.36101C30.6241 3.13422 30.9312 2.99259 31.273 2.99259C31.6151 2.99259 31.9293 3.13422 32.1525 3.36101C32.3759 3.58786 32.5157 3.90675 32.5157 4.25399C32.5157 4.60115 32.3759 4.92012 32.1525 5.14691ZM31.273 2.48948C30.7985 2.48948 30.3588 2.68781 30.0447 3.00666C29.7305 3.32558 29.5352 3.76492 29.5352 4.25399C29.5352 4.74298 29.7305 5.18233 30.0447 5.50123C30.3588 5.82011 30.7917 6.01849 31.273 6.01849C31.7547 6.01849 32.1876 5.82011 32.5016 5.50123C32.8157 5.18233 33.0112 4.74298 33.0112 4.25399C33.0112 3.76492 32.8157 3.32558 32.5016 3.00666C32.1876 2.68781 31.7547 2.48948 31.273 2.48948Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M36.3822 5.14687C36.152 5.37364 35.8448 5.51535 35.5027 5.51535C35.1609 5.51535 34.8467 5.37364 34.6233 5.14687C34.3999 4.92008 34.2603 4.60111 34.2603 4.25395C34.2603 3.9067 34.3999 3.58782 34.6233 3.36096C34.8537 3.13417 35.1609 2.99254 35.5027 2.99254C35.8448 2.99254 36.1588 3.13417 36.3822 3.36096C36.6056 3.58782 36.7453 3.9067 36.7453 4.25395C36.7453 4.60111 36.6056 4.92008 36.3822 5.14687ZM35.5097 2.48943C35.0282 2.48943 34.5954 2.68776 34.2814 3.00661C34.2603 3.02085 34.2465 3.04204 34.2254 3.06338V2.74438C34.2254 2.60266 34.1137 2.48943 33.9742 2.48943C33.8346 2.48943 33.7229 2.60266 33.7229 2.74438V7.76184C33.7229 7.90355 33.8346 8.01691 33.9742 8.01691C34.1137 8.01691 34.2254 7.90355 34.2254 7.76184V5.44443C34.2465 5.4586 34.2603 5.47986 34.2814 5.50118C34.5954 5.82007 35.0282 6.01845 35.5097 6.01845C35.9913 6.01845 36.4241 5.82007 36.7383 5.50118C37.0524 5.18228 37.2479 4.74294 37.2479 4.25395C37.2479 3.76487 37.0524 3.32553 36.7383 3.00661C36.4241 2.68776 35.9913 2.48943 35.5097 2.48943Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M38.5247 3.86419C38.5875 3.65158 38.7062 3.46735 38.8528 3.3185C39.0553 3.12012 39.3204 2.99955 39.6066 2.99955C39.8927 2.99955 40.158 3.12012 40.3604 3.3185C40.507 3.46735 40.6187 3.65158 40.6955 3.86419H38.5247ZM40.7095 2.95717C40.4232 2.65934 40.0323 2.48949 39.6066 2.48949C39.1808 2.48949 38.783 2.65239 38.5038 2.95717C37.9035 3.61615 37.9105 4.32484 38.1477 5.04057C38.2526 5.36656 38.4758 5.60049 38.7341 5.77054C38.9923 5.94065 39.3066 6.02566 39.6623 6.0185C40.0115 6.01149 40.4023 5.92641 40.8212 5.74928C40.9467 5.6926 41.0095 5.54375 40.9538 5.41621C40.898 5.28869 40.7514 5.22485 40.6257 5.28153C40.2627 5.43747 39.9346 5.51541 39.6553 5.51541C39.3972 5.51541 39.1738 5.45866 38.9994 5.34537C38.8319 5.23193 38.6992 5.06891 38.6085 4.84921C38.5596 4.70758 38.5177 4.55163 38.4968 4.38153H40.8072C40.9329 4.38153 41.3446 4.40987 41.1282 3.69414C41.0446 3.43902 40.9467 3.19806 40.7095 2.95717Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M42.3362 3.86419C42.3991 3.65158 42.5177 3.46735 42.6643 3.3185C42.8668 3.12012 43.1321 2.99955 43.4182 2.99955C43.7042 2.99955 43.9695 3.12012 44.1719 3.3185C44.3185 3.46735 44.4302 3.65158 44.507 3.86419H42.3362ZM44.9399 3.69414C44.8561 3.43902 44.7584 3.19806 44.521 2.95717C44.2348 2.65934 43.8438 2.48949 43.4182 2.48949C42.9925 2.48949 42.5945 2.65239 42.3153 2.95717C41.7149 3.61615 41.7219 4.32484 41.9594 5.04057C42.064 5.36656 42.2874 5.60049 42.5457 5.77054C42.804 5.94065 43.118 6.02566 43.474 6.0185C43.8229 6.01149 44.2138 5.92641 44.6327 5.74928C44.7584 5.6926 44.8212 5.54375 44.7652 5.41621C44.7095 5.28869 44.5629 5.22485 44.4372 5.28153C44.0742 5.43747 43.7461 5.51541 43.4672 5.51541C43.2089 5.51541 42.9855 5.45866 42.8108 5.34537C42.6434 5.23193 42.5108 5.06891 42.42 4.84921C42.3711 4.70758 42.3293 4.55163 42.3083 4.38153H44.6187C44.7444 4.38153 45.1563 4.40987 44.9399 3.69414Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M25.3265 12.5981H22.7181V8.75126H25.072C25.1129 8.75126 25.1527 8.75331 25.1934 8.75796C25.5514 8.79847 27.1172 9.07361 27.1172 10.778C27.1172 12.5981 25.3265 12.5981 25.3265 12.5981ZM24.866 7.28293H21.2517V17.0981H22.7181V14.1687H25.0234C25.7961 14.1687 26.5633 13.9797 27.2281 13.5797C28.0186 13.1043 28.8092 12.2669 28.8092 10.8189C28.8092 9.46157 28.1143 8.59977 27.3762 8.0672C26.6464 7.54071 25.7614 7.28293 24.866 7.28293Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M32.4437 15.747C31.2433 15.747 30.2681 14.7587 30.2681 13.5378C30.2681 12.3188 31.2433 11.3307 32.4437 11.3307C33.6453 11.3307 34.618 12.3175 34.6193 13.5352V13.5405C34.618 14.7602 33.6453 15.747 32.4437 15.747ZM34.6193 10.1227V10.8133C34.0256 10.3219 33.2686 10.028 32.4437 10.028C30.5374 10.028 28.9849 11.6024 28.9849 13.5378C28.9849 15.4752 30.5374 17.0496 32.4437 17.0496C33.2686 17.0496 34.0256 16.7556 34.6193 16.2645V17.05H36.0859V10.1227H34.6193Z"
                      fill="#EE3929"
                    />
                    <path
                      d="M36.7451 10.0279H38.7064L41.0077 14.4996L43.2277 10.0279H45.0011L39.7246 20H37.9978L40.0098 16.2986L36.7451 10.0279Z"
                      fill="#EE3929"
                    />
                  </svg>
                </div>
                <p className="ml-[30px] text-sm font-normal">ShopeePay</p>
              </div>
              <hr style={{ border: '0.5px solid #E4E4E480' }} />
              <div
                className="flex flex-row items-center cursor-pointer"
                onClick={() => pilihMetode({ metode: 'emoney', nama: 'dana' })}
              >
                <div className="w-[60px] flex justify-center">
                  <svg
                    width="54"
                    height="20"
                    viewBox="0 0 54 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M5.74771 3.10829C3.49129 3.51651 1.61864 4.94808 0.640714 7.01251C0.151786 8.04479 0 8.75208 0 9.99872C0 11.2454 0.151786 11.9527 0.640714 12.9849C1.46143 14.7175 2.89807 16 4.71086 16.6184C8.53593 17.9234 12.6768 15.6854 13.7211 11.7487C13.8845 11.1325 13.9106 10.8922 13.9106 9.99872C13.9106 9.10522 13.8845 8.86494 13.7211 8.24872C12.7866 4.72579 9.28514 2.46843 5.74771 3.10829ZM26.8791 6.58851C26.0249 6.88729 25.5556 7.32808 25.2293 8.13815C25.0761 8.51822 25.0687 8.63879 25.0469 11.088L25.0241 13.6416H25.671H26.318V12.5701V11.4987H28.068H29.818V12.5701V13.6416H30.4966H31.1751L31.1739 11.3737C31.1726 8.88408 31.1205 8.41858 30.7721 7.77843C30.517 7.30972 30.1253 6.96329 29.5411 6.68986C29.1085 6.48736 28.9946 6.46643 28.2109 6.44544C27.461 6.42544 27.2943 6.44329 26.8791 6.58851ZM35.592 6.56015C34.8501 6.80515 34.3947 7.18615 34.0723 7.83186C33.7824 8.41222 33.7466 8.79365 33.7466 11.2941V13.6416H34.4251H35.1037L35.1041 11.3023C35.1044 9.87351 35.134 8.85679 35.1803 8.69008C35.3689 8.01093 36.1237 7.57386 36.9421 7.67008C37.6953 7.75858 38.1531 8.15465 38.3127 8.85586C38.3541 9.03729 38.3867 10.1493 38.3877 11.4094L38.3894 13.6416H39.068H39.7466L39.7451 11.4809C39.7436 9.06315 39.6904 8.51394 39.3966 7.88522C39.1345 7.32415 38.768 6.96322 38.1815 6.68872C37.7504 6.48694 37.6388 6.46665 36.8537 6.44751C36.1671 6.43072 35.9161 6.45315 35.592 6.56015ZM44.1239 6.58994C43.2479 6.90315 42.7276 7.42715 42.4472 8.27836C42.3033 8.71536 42.2902 8.92222 42.2631 11.1952L42.2338 13.6416H42.9188H43.6037V12.5701V11.4987H45.3537H47.1037V12.5701V13.6416H47.7506H48.3976L48.3756 11.0523L48.3537 8.46301L48.1286 7.98794C47.6137 6.90115 46.749 6.42786 45.2823 6.43001C44.7268 6.43086 44.4693 6.46636 44.1239 6.58994ZM16.3894 10.1059V13.6416L17.8359 13.6391C18.7376 13.6375 19.4898 13.5996 19.8334 13.5384C21.1796 13.2983 22.0535 12.5739 22.4661 11.3559C22.5874 10.9979 22.6242 10.7198 22.6268 10.1416C22.6335 8.63165 22.0598 7.55351 20.9521 6.99429C20.207 6.61822 19.8786 6.57015 18.053 6.57015H16.3894V10.1059ZM10.3894 7.54815L10.9251 7.82015L10.944 10.0417L10.9629 12.2634L10.567 12.0637C9.77414 11.6637 9.25129 11.7005 7.4165 12.285C5.616 12.8586 4.68543 12.9126 3.49657 12.5125L2.92514 12.3201L2.90621 10.1174C2.89121 8.36365 2.90579 7.92244 2.97764 7.95251C3.61529 8.21944 4.07864 8.30101 4.77136 8.26844C5.41814 8.23801 5.62657 8.19008 6.69943 7.82501C8.24771 7.29815 8.655 7.20808 9.318 7.24572C9.7615 7.27086 9.94593 7.32293 10.3894 7.54815ZM28.998 7.85658C29.5643 8.13072 29.8169 8.69786 29.8176 9.69644L29.818 10.287L28.0859 10.2679L26.3537 10.2487L26.3546 9.60586C26.356 8.54801 26.7059 7.94565 27.4389 7.73915C27.8861 7.61308 28.6073 7.66744 28.998 7.85658ZM46.2346 7.84979C46.8329 8.15501 47.0443 8.60322 47.0586 9.59686L47.068 10.2487L45.3279 10.2679L43.5879 10.287L43.6142 9.51786C43.6377 8.83115 43.6619 8.71229 43.8397 8.40894C43.9493 8.22201 44.1209 8.01536 44.2212 7.94965C44.7176 7.62443 45.6976 7.57579 46.2346 7.84979ZM19.9649 7.95736C20.4132 8.11829 20.7491 8.41415 20.9964 8.86615C21.1775 9.19736 21.2094 9.34129 21.2341 9.93822C21.2692 10.7867 21.1383 11.2441 20.7351 11.6814C20.275 12.1806 19.8802 12.3106 18.7287 12.3424L17.7466 12.3696V10.0676V7.76579L18.693 7.80322C19.3015 7.82722 19.7556 7.88229 19.9649 7.95736Z"
                      fill="#108EE9"
                    />
                  </svg>
                </div>
                <p className="ml-[30px] text-sm font-normal">Dana</p>
              </div>
            </div>
            <div className="bg-[#E4E4E44D] my-[24px]">
              <p className="px-[20px] py-[22px] flex flex-col font-medium text-small">
                Virtual account (verifikasi otomatis, minimal nominal Rp.
                10,000)
              </p>
            </div>
            <div
              className={`space-y-6 mx-[20px] my[24px] ${
                nominal() >= 10000 ? '' : 'opacity-20 pointer-events-none'
              }`}
            >
              <div
                className="flex flex-row items-center cursor-pointer"
                onClick={() =>
                  pilihMetode({ metode: 'bank_transfer', nama: 'bni' })
                }
              >
                <div className="w-[60px] flex justify-center">
                  <svg
                    width={54}
                    height={17}
                    viewBox="0 0 54 17"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M0 6.3896L4.55542 12.1363L0 15.9113V6.3896ZM1.83317 15.9113L5.26119 13.0437L7.63039 15.9113H1.83317ZM0 3.31462L1.1884 4.81845L6.07663 10.9264L7.66074 9.66527C7.66074 9.66527 6.34591 8.1172 5.46283 6.3896C3.7365 3.01215 4.95871 0.909062 4.95871 0.909062H0V3.31462ZM6.77323 11.8695L8.38673 10.537C8.38673 10.537 9.92722 12.5648 11.7136 13.0437C14.0547 13.6711 15.0911 12.1366 15.0911 12.1366V15.9113H9.94935L11.1087 14.9088C11.1087 14.9088 10.5037 15.3121 9.02423 14.2874C8.15127 13.6824 6.77355 11.8695 6.77355 11.8695H6.77323ZM6.92178 0.898315C6.92178 0.898315 6.40723 1.59934 6.77323 3.31462C7.16515 5.14778 8.72208 7.08841 8.7186 7.04479C8.7186 7.04479 8.81847 5.11807 9.94935 3.98752C12.3593 1.57753 15.0911 3.01215 15.0911 3.01215V0.909378L6.92178 0.898315Z"
                      fill="#F15A23"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M15.0911 5.55296C15.0911 5.55296 13.567 4.24762 12.2417 4.24762C10.5467 4.24762 9.62158 5.71099 9.62158 6.77233C9.62158 8.31851 10.3637 9.17757 11.1087 9.92253C12.1792 10.993 13.4817 12.1476 15.0911 11.2184V5.55296Z"
                      fill="#F15A23"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M32.4482 1.05574H36.045C36.045 1.05574 39.2309 5.87981 40.7967 7.87322C42.3625 9.86599 44.0477 12.1363 44.0477 12.1363V2.13604C44.0477 1.70398 42.9137 1.05574 42.9137 1.05574H47.0611C47.0611 1.05574 45.7004 1.61485 45.7004 2.13604V16.6841C45.7004 16.6841 44.3944 15.96 42.9137 14.2394C41.2502 12.3063 35.332 4.50146 35.332 4.50146V14.6104C35.332 15.1281 36.466 15.9113 36.466 15.9113H32.4482C32.4482 15.9113 33.55 15.1218 33.55 14.6104V2.13604C33.55 1.6768 32.4482 1.05574 32.4482 1.05574ZM49.3838 1.05574H53.9999C53.9999 1.05574 52.7603 1.64267 52.7603 2.13604V14.6104C52.7603 15.1493 53.9999 15.9113 53.9999 15.9113H49.3838C49.3838 15.9113 50.5381 15.1322 50.5381 14.6104V2.13604C50.5381 1.66194 49.3838 1.05574 49.3838 1.05574ZM18.8679 1.05574C18.8679 1.05574 20.0645 1.65246 20.0645 2.13604V14.6104C20.0645 15.1408 18.8679 15.9113 18.8679 15.9113H25.7063C26.1336 15.9113 30.9204 15.1284 30.9204 11.4381C30.9204 7.74774 27.2022 7.40197 27.2022 7.40197C27.2022 7.40197 29.4674 6.77237 29.4674 4.24766C29.4674 1.52572 26.1336 1.05542 25.7063 1.05542H18.8679V1.05574ZM22.5004 7.15733V2.5131H25.2786C25.7059 2.5131 27.2019 3.01217 27.2019 4.86366C27.2019 6.38962 25.7059 7.15733 25.2783 7.15733H22.5001H22.5004ZM22.5004 8.37544H25.7059C26.1333 8.37544 28.6548 9.03064 28.6548 11.2184C28.6548 13.4489 26.1333 14.2394 25.7059 14.2394H22.5004V8.37544Z"
                      fill="#005E6A"
                    />
                  </svg>
                </div>
                <p className="ml-[30px] text-sm font-normal">
                  BNI Virtual Account
                </p>
              </div>
              <hr style={{ border: '0.5px solid #E4E4E480' }} />
              <div
                className="flex flex-row items-center cursor-pointer"
                onClick={() =>
                  pilihMetode({ metode: 'bank_transfer', nama: 'permata' })
                }
              >
                <div className="w-[60px] flex justify-center">
                  <svg
                    width={54}
                    height={14}
                    viewBox="0 0 54 14"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M45.5823 0.0448105L47.3732 0.761038L49.7015 0L45.5823 0.0448105Z"
                      fill="#D7042F"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M45.3582 0.313321C45.7474 0.519228 46.8254 0.962148 47.0598 1.20879L47.3731 0.805867V0.761056L45.5822 0.0448287L45.4407 0.0422363L45.3582 0.313321Z"
                      fill="#AD222D"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M47.3733 0.761038V0.805849L47.8658 1.16396L50.1045 0.358114L49.836 0H49.7016L47.3733 0.761038Z"
                      fill="#DC4958"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M51.5821 4.29845L53.9104 4.25364L50.6418 2.776L51.5821 4.29845Z"
                      fill="#7EB033"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M42.1345 4.34328L43.657 4.4329L44.8657 2.95526L42.1345 4.34328Z"
                      fill="#0096B7"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M50.2837 2.91043L51.0447 4.65656L51.5821 4.34326V4.29845L50.6418 2.776L50.2837 2.91043Z"
                      fill="#5A891D"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M44.8658 2.95526L43.657 4.43289V4.47733L44.2388 4.70139L45.4031 3.13413L44.9983 2.8623L44.8658 2.95526Z"
                      fill="#29B5E4"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M51.582 4.29847V4.34328L51.7165 4.92545L53.9999 4.74621L53.9977 4.30218L53.9103 4.25366L51.582 4.29847Z"
                      fill="#A1C24A"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M42.0897 4.65656L43.6569 4.92543V4.43288L42.1345 4.34326L42.0393 4.38844L42.0897 4.65656Z"
                      fill="#00738F"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M48.0895 13.2984L48.1792 13.0747L51.0448 4.65659L50.2838 2.91046C50.2012 3.04045 49.1972 7.58964 49.1157 8.10033C48.9843 8.921 48.7002 9.84868 48.534 10.6979C48.444 11.1567 47.9033 13.0302 48.0895 13.2984Z"
                      fill="#39772F"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M47.0598 1.20877L47.8657 7.11932V1.16396L47.3731 0.805847L47.0598 1.20877Z"
                      fill="#D2072E"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M47.8657 7.34336V7.11931L47.0598 1.20876C46.8254 0.96212 45.7474 0.5192 45.3582 0.313293L47.7346 7.29003L47.8657 7.34336Z"
                      fill="#731C18"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M47.8657 1.16394V7.34335C48.0883 7.47297 48.1764 6.87895 48.2416 6.64453C48.3305 6.32752 48.4194 6.07569 48.5105 5.74906C48.6827 5.13282 48.873 4.58324 49.0478 3.95812C49.2197 3.34188 49.4093 2.79156 49.5852 2.16718C49.7122 1.71574 50.0714 0.754722 50.1044 0.358093L47.8657 1.16394Z"
                      fill="#B12130"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M43.657 4.92546L47.3733 10.5671L44.2388 4.70141L43.657 4.47736V4.92546Z"
                      fill="#0094B5"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M8.01514 12.4029L7.96329 12.9843L7.49037 13.1973L7.47778 13.3432H9.44796V13.1639C9.04948 13.1639 8.8658 13.0232 8.8658 12.6269V11.0597C8.8658 10.6427 9.09244 9.98498 9.49277 9.98498C9.74275 9.98498 9.61165 10.4327 9.8957 10.4327H10.1194C10.3408 10.4327 10.5227 10.2512 10.5227 10.0298V9.98498C10.5227 9.72352 10.2916 9.49243 10.0301 9.49243H9.85089C9.28835 9.49243 9.10948 9.9735 8.8658 10.2535V9.49243L7.47778 9.58205V9.76129H7.65665C7.88774 9.76129 8.01514 9.94757 8.01514 10.1642V12.4029Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M47.5076 10.8805L47.3732 10.5672L43.6569 4.92548L42.0896 4.65662C42.7895 5.7017 43.9839 6.76419 44.7582 7.80891C45.0608 8.21702 47.2269 10.8153 47.5076 10.8805Z"
                      fill="#005471"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M44.2388 4.70141L47.3733 10.5671L47.5077 10.8804C47.5877 10.8516 47.6418 10.8479 47.6418 10.7016C47.6418 10.559 45.5472 3.4345 45.4031 3.13416L44.2388 4.70141Z"
                      fill="#00738F"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M21.1343 9.80574H21.5376V12.4477C21.5376 13.0821 21.802 13.4328 22.433 13.4328C22.7178 13.4328 23.4181 13.2617 23.4181 13.0747C23.4181 12.9799 23.4018 13.0154 23.3733 12.8954C23.2352 12.9684 23.0608 13.1195 22.8808 13.1195C22.5901 13.1195 22.433 12.8317 22.433 12.5373V9.80574H23.2837V9.58206H22.433V8.41772H22.209C21.9923 8.41772 21.9879 9.58206 21.2687 9.58206H21.1343V9.80574Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M51.0448 4.65656L48.1792 13.0746L51.7166 4.92543L51.5822 4.34326L51.0448 4.65656Z"
                      fill="#7CAD31"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M1.47764 8.19402H2.14942C2.6453 8.19402 3.04489 8.76878 3.04489 9.31318V9.80572C3.04489 10.4386 2.53235 10.8804 1.88056 10.8804H1.47764V8.19402ZM3.98517 9.44761C3.98517 8.46844 3.28413 7.96997 2.32867 7.96997H0.0448105V8.14921C0.381815 8.14921 0.626977 8.26735 0.626977 8.59695V12.7162C0.626977 13.0062 0.425885 13.1195 0.134432 13.1195H0V13.3432H2.10461V13.1195H1.97018C1.61577 13.1195 1.47764 12.9813 1.47764 12.6269V11.0597H2.19423C3.28376 11.0597 3.98517 10.5556 3.98517 9.44761Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M15.3138 9.80573H15.3583C15.8134 9.80573 15.8956 10.2827 15.8956 10.746V12.8058C15.8956 13.0947 15.6945 13.1639 15.4031 13.1639V13.3432H17.3284V13.1639H17.1944C16.1397 13.1639 17.5651 9.49243 15.8956 9.49243H15.5375C15.0898 9.49243 14.5446 9.85795 14.4628 10.1642H14.3732C14.3002 9.85092 14.0113 9.49243 13.6569 9.49243H13.1196C12.6326 9.49243 12.3682 9.99275 12.1345 10.1642V9.49243L10.7465 9.58205V9.76129H10.8809C11.1709 9.76129 11.2838 9.96239 11.2838 10.2535V12.5821C11.2838 12.8125 11.2331 13.1195 11.015 13.1195H10.7017V13.3432H12.6718V13.1639H12.5374C12.14 13.1639 12.1345 12.7988 12.1345 12.4029V11.1045C12.1345 10.4583 12.4074 9.80573 13.03 9.80573C13.3521 9.80573 13.5673 10.152 13.5673 10.4775V12.8058C13.5673 13.0947 13.3662 13.1639 13.0748 13.1639V13.3432H15.0001V13.1195H14.7765C14.562 13.1195 14.4628 12.9677 14.4628 12.761V10.7908C14.4628 10.3579 14.849 9.80573 15.3138 9.80573Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M28.8805 10.5671H29.9552C30.6403 10.5671 31.2088 11.0626 31.2088 11.7311V11.9103C31.2088 12.6836 30.63 13.1639 29.8656 13.1639H28.8805V10.5671ZM28.8805 8.14921H29.776C30.4774 8.14921 31.0299 8.47511 31.0299 9.17911V9.31318C31.0299 10.0809 30.3722 10.3879 29.5971 10.3879H28.8805V8.14921ZM29.9552 7.96997H27.7166V8.1044H27.8954C28.1121 8.1044 28.2539 8.24587 28.2539 8.46252V12.8954C28.2539 13.1217 27.9673 13.2087 27.7166 13.2087V13.2983H30.2241C31.1081 13.2983 31.8806 12.8776 31.8806 12V11.7759C31.8806 10.9656 31.0751 10.4775 30.2685 10.4775C30.6022 10.1875 31.7014 10.4234 31.7014 9.17911V9.04468C31.7014 8.30364 30.7381 7.96997 29.9552 7.96997Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M51.7164 4.92546L48.179 13.0747L48.0894 13.2984C48.3756 13.465 48.8089 12.6221 48.9493 12.4118C49.2015 12.0333 49.4174 11.6844 49.6744 11.3015C50.1732 10.5586 50.6184 9.8635 51.1161 9.11617C52.0919 7.65075 53.0274 6.19867 53.9999 4.74622L51.7164 4.92546Z"
                      fill="#6B8F16"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M18.4032 12.1344C18.4032 11.5967 18.9831 11.2834 19.5227 11.2834H19.7912V12.1788C19.7912 12.6566 19.4283 13.1195 18.9405 13.1195C18.6476 13.1195 18.4032 12.7262 18.4032 12.4029V12.1344ZM18.3135 10.746C18.9239 10.746 18.3447 9.62686 19.2538 9.62686H19.2986C19.6208 9.62686 19.7912 9.93054 19.7912 10.2535V11.1045C18.7698 11.1045 17.4629 11.326 17.4629 12.3133V12.4029C17.4629 13.0347 17.8566 13.3061 18.4376 13.3987C19.2886 13.5339 19.4697 12.9932 19.836 12.8954C19.8438 13.2454 20.1549 13.3432 20.5078 13.3432H21.1344V13.1639C20.6133 13.1639 20.6411 12.8691 20.6418 12.3581C20.643 11.9252 20.6418 11.4926 20.6418 11.0597C20.6418 10.0735 20.6 9.49243 19.6123 9.49243H19.1198C18.5098 9.49243 17.7318 9.80277 17.7318 10.3879V10.4775C17.7318 10.6616 17.9777 10.746 18.1795 10.746H18.3135Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M24.5821 12.1344C24.5821 11.5537 25.1998 11.2834 25.7913 11.2834H25.9701V12C25.9701 12.5866 25.692 13.1195 25.1195 13.1195C24.8688 13.1195 24.5821 12.7492 24.5821 12.4925V12.1344ZM24.5373 10.746C25.0373 10.746 24.5518 9.62686 25.4328 9.62686H25.4776C25.8613 9.62686 25.9701 10.0357 25.9701 10.4327V11.1045H25.7016C24.5899 11.1045 23.6418 11.3993 23.6418 12.5373C23.6418 12.9362 24.1725 13.4328 24.5821 13.4328H24.7166C25.3817 13.4328 25.5835 13.1543 25.9701 12.8954C25.9975 13.225 26.3297 13.3432 26.6867 13.3432H27.3137V13.1639C26.7634 13.1639 26.8204 12.8832 26.8212 12.3581C26.8215 11.9403 26.8212 11.5222 26.8212 11.1045C26.8212 10.5827 26.8867 10.2887 26.6864 9.94054C26.5519 9.70649 26.239 9.49243 25.8809 9.49243H25.2987C24.6903 9.49243 23.8659 9.83795 23.8659 10.3879C23.8659 10.6949 24.1436 10.746 24.4481 10.746H24.5373Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M32.8656 12.4029C32.8656 11.4652 33.7718 11.1941 34.7014 11.1941V11.7759C34.7014 12.5132 34.2847 13.1639 33.5822 13.1639H33.4926C33.1474 13.1639 32.8656 12.7632 32.8656 12.4029ZM43.1898 9.87646C43.4342 9.73277 43.6027 9.82868 43.6568 9.62685H42.0447V9.71647C42.2573 9.71647 42.5373 9.79906 42.5373 9.98497C42.5373 10.2323 41.1611 11.737 41.0148 11.7759V9.31318L41.0689 7.9259L39.9849 7.96997V8.1044H40.2538C40.3986 8.1044 40.4775 8.26698 40.4775 8.41771V12.8506C40.4775 13.0673 40.336 13.2087 40.1194 13.2087H39.7612C38.7436 13.2087 40.3397 9.49242 38.3284 9.49242C37.2148 9.49242 37.3341 10.0216 36.8956 10.3431V9.53723L35.8664 9.59426L35.8657 9.71647C36.2042 9.72388 36.3582 9.86461 36.3582 10.209V12.8058C36.3582 13.0495 36.199 13.2087 35.9553 13.2087H35.5968C35.398 13.2087 35.318 13.1036 35.2387 12.985C35.2387 12.224 35.235 11.4622 35.2391 10.7012C35.2432 9.88942 35.0213 9.49242 34.2088 9.49242H33.8955C33.3096 9.49242 32.5075 9.78498 32.5075 10.2983V10.4327C32.5075 10.536 32.5386 10.5671 32.6416 10.5671H32.9552C33.0556 10.5671 33.0534 10.5316 33.1341 10.4775C33.1341 9.93904 33.3304 9.58204 33.8507 9.58204C34.4436 9.58204 34.7014 9.84202 34.7014 10.4327V10.7016L34.6514 11.1037L34.4329 11.1045C33.6044 11.1045 32.2834 11.4167 32.2834 12.1788V12.5821C32.2834 12.9102 32.7164 13.3432 33.0449 13.3432H33.6267C34.0581 13.3432 34.4503 12.8399 34.7014 12.6714C34.7014 13.1139 34.7525 13.3432 35.1939 13.3432H37.4774V13.2087H37.2985C37.0145 13.2087 36.8956 12.9528 36.8956 12.6714V11.1493C36.8956 10.5231 37.3152 9.71647 37.9255 9.71647H38.194C38.6754 9.71647 38.8658 10.3312 38.8658 10.8356V12.3133C38.8658 12.724 38.8684 13.2087 38.4625 13.2087H38.2836V13.3432H41.597V13.2087H41.4178C41.1337 13.2087 41.0148 12.9528 41.0148 12.6714V12.134C41.0148 11.997 41.5618 11.4063 41.6866 11.373L42.8365 13.325L43.7909 13.3432V13.2087C43.2579 13.1643 43.0439 12.5777 42.788 12.197C42.6847 12.0429 42.0447 11.0682 42.0447 10.9701C42.0447 10.9697 42.6817 10.2635 42.7491 10.1968C42.8813 10.0668 43.0206 9.97571 43.1898 9.87646Z"
                      fill="#343434"
                    />
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M4.92546 10.9701C4.92546 10.4227 5.22581 9.62686 5.73131 9.62686C6.28385 9.62686 6.44791 10.5012 6.44791 11.1045H4.92546V10.9701ZM5.86574 13.1195C5.19396 13.1195 4.88065 12.0174 4.88065 11.2834H7.34338V11.1493C7.34338 10.1783 6.78825 9.49243 5.82093 9.49243H5.68687C3.36154 9.49243 3.33228 13.388 5.68687 13.388H6.00018C6.54457 13.388 7.29857 12.8436 7.29857 12.4477C7.29857 12.3559 7.20636 12.3655 7.1197 12.3581C7.03378 12.6788 6.55716 13.1195 6.13461 13.1195H5.86574Z"
                      fill="#343434"
                    />
                  </svg>
                </div>
                <p className="ml-[30px] text-sm font-normal">
                  Permata Bank Virtual Account
                </p>
              </div>
            </div>
            <div className="bg-[#E4E4E44D] my-[24px]">
              <p className="px-[20px] py-[22px] flex flex-col font-medium text-small">
                Bayar ditempat / COD (verifikasi manual 1x24 jam, pembayaran
                langsung dengan tim Peduly)
              </p>
            </div>
            <div
              className={`space-y-6 mx-[20px] my[24px] pb-8 ${
                nominal() >= 5000 ? '' : 'opacity-20 pointer-events-none'
              }`}
            >
              <div
                className="my-[24px] flex flex-row items-center cursor-pointer"
                onClick={() => pilihMetode({ metode: 'cod', nama: 'tunai' })}
              >
                <div className="w-[60px] flex justify-center">
                  <img
                    src="/images/icon/metode-pembayaran/uang-tunai.svg"
                    alt=""
                  />
                </div>
                <p className="ml-[30px]  text-sm font-normal">Uang Tunai</p>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div className="mx-auto" style={{ maxWidth: '430px' }}>
          <div className="">
            <div className="px-5 flex flex-col">
              <h1 className="my-8 text-xl text-peduly-primary font-semibold">
                Support Us to Support Others!
              </h1>
              <p className="text-sm text-peduly-dark font-normal overflow-hidden overflow-ellipsis whitespace-normal">
                Layanan kami 100% gratis. Kami bekerja dengan bantuan donasi
                dari para donatur. Setiap rupiah yang kamu berikan digunakan
                untuk biaya pengembangan produk dan operasional sehingga kami
                bisa memastikan layanan kami lebih baik lagi.
              </p>
              <hr className="border-t-[1px] border-solid border-peduly-light mt-6" />
            </div>
            <form className="relative bg-white" onSubmit={handleOnSubmit}>
              <h1 className="mt-[24px] text-lg font-medium text-center justify-center flex mb-[27px]">
                Masukkan nominal
              </h1>
              <div className="mx-[20px]">
                <div
                  className="flex rounded-full h-[72px] items-center text-2xl font-medium px-[23px] mt-[20px]"
                  style={{ backgroundColor: 'rgba(228, 228, 228, 0.3)' }}
                >
                  <label forhtml="jumlah_donasi">Rp</label>
                  <input
                    id="jumlah_donasi"
                    className="text-right w-full text-peduly-primary text-2xl outline-none focus:ring-transparent border-none bg-transparent placeholder-[#0288D1] pl-[10px] font-medium"
                    type="text"
                    value={value}
                    onChange={handleChange}
                    placeholder="0"
                    pattern="[0-9]*[.]?[0-9]*[0-9]*[.]?[0-9]*[0-9]*[.]?[0-9]*[0-9]*[.]?[0-9]*[0-9]*[.]?[0-9]*"
                    min={0}
                    inputMode="numeric"
                  />
                </div>
                <div className="grid grid-cols-6 gap-4 mt-[24px] text-sm font-normal text-center">
                  <span
                    className={`col-span-2 cursor-pointer h-[40px] px-[5px] border-[1px] rounded-full flex  items-center justify-center ${
                      active === 1
                        ? 'text-peduly-primary border-peduly-primary'
                        : ' text-[#DEDEDE]'
                    }`}
                    onClick={() => {
                      setValue('10.000')
                      setActive(1)
                    }}
                  >
                    Rp. 10.000
                  </span>
                  <span
                    className={`col-span-2 cursor-pointer h-[40px] px-[5px] border-[1px] rounded-full flex  items-center justify-center ${
                      active === 2
                        ? 'text-peduly-primary border-peduly-primary'
                        : ' text-[#DEDEDE]'
                    }`}
                    onClick={() => {
                      setValue('20.000')
                      setActive(2)
                    }}
                  >
                    Rp. 20.000
                  </span>
                  <span
                    className={`col-span-2 cursor-pointer h-[40px] px-[5px] border-[1px] rounded-full flex  items-center justify-center ${
                      active === 3
                        ? 'text-peduly-primary border-peduly-primary'
                        : ' text-[#DEDEDE]'
                    }`}
                    onClick={() => {
                      setValue('50.000')
                      setActive(3)
                    }}
                  >
                    Rp. 50.000
                  </span>
                </div>
                <hr className="border-t-[1px] border-solid border-peduly-light mt-6" />
                <div
                  className="flex justify-between h-[80px] items-center font-normal cursor-pointer"
                  onClick={() => handlePilihanMetode()}
                >
                  {method ? (
                    <>
                      <div className="flex flex-row items-center">
                        <div className="w-[60px] flex justify-center ml-[8px]">
                          <img src={method.image} alt="" />
                        </div>
                        <h1 className="ml-[30px] text-sm font-normal">
                          {method.label}
                        </h1>
                      </div>
                      <button className="text-sm h-[32px] px-[24px] bg-peduly-primary rounded-full text-white">
                        Pilih
                      </button>
                    </>
                  ) : (
                    <>
                      <h1 className="text-base font-medium">
                        Pilih Metode pembayaran
                      </h1>
                      <button className="text-sm h-[32px] px-[24px] bg-[#E4E4E4] rounded-full text-white">
                        Pilih
                      </button>
                    </>
                  )}
                </div>
                <hr className="border-t-[1px] border-solid border-peduly-light" />
                {method.metode === 'balance' && (
                  <div
                    style={{ backgroundColor: 'rgba(252, 174, 3, 0.12)' }}
                    className="flex justify-between items-center my-[12px] h-[42px] rounded-[15px] px-[20px] font-normal text-sm text-[#717171]"
                  >
                    <p>Saldo dompet saat ini</p>
                    {user?.user?.balance?.amount >=
                    (value ? parseInt(value.replaceAll('.', '')) : 0) ? (
                      <p>
                        {splitInDots(
                          user?.user?.balance?.amount
                            ? user?.user?.balance?.amount
                            : 0
                        )}
                      </p>
                    ) : (
                      <p className="text-red-600">
                        -{' '}
                        {IdrFormat(
                          (value
                            ? value
                              ? parseInt(value.replaceAll('.', ''))
                              : 0
                            : 0) -
                            (user?.user?.balance?.amount
                              ? user?.user?.balance?.amount
                              : 0)
                        )}
                      </p>
                    )}
                  </div>
                )}
                {!getToken() && (
                  <div>
                    <hr className="border-t-[1px] border-solid border-peduly-light" />
                    <div className="text-center my-[24px]">
                      <p className="text-sm font-normal">
                        <span
                          className="text-peduly-primary cursor-pointer"
                          onClick={handleOnLogin}
                        >
                          Masuk
                        </span>{' '}
                        atau isi data di bawah ini
                      </p>
                    </div>
                    <div className="w-full border-[1px] h-[60px] px-[20px] flex items-center rounded-full">
                      <input
                        className="bg-transparent outline-none  focus:ring-transparent border-none text-base font-normal w-full"
                        type="text"
                        placeholder="Nama Lengkap"
                        maxLength="50"
                        value={namaLengkap}
                        onChange={(e) => setNamaLengkap(e.target.value)}
                      />
                    </div>
                    <div className="w-full border-[1px] h-[60px] px-[20px] flex items-center rounded-full mt-[24px]">
                      <input
                        className="bg-transparent outline-none  focus:ring-transparent border-none text-base font-normal w-full"
                        type="email"
                        placeholder="Alamat Email"
                        maxLength="40"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                      />
                    </div>
                    <div className="w-full border-[1px] h-[60px] px-[20px] flex items-center rounded-full mt-[24px]">
                      <input
                        className="bg-transparent outline-none  focus:ring-transparent border-none text-base font-normal w-full"
                        type="tel"
                        placeholder="Nomor Ponsel"
                        maxLength="14"
                        value={noHp}
                        onChange={handleChangePhoneNumber}
                      />
                    </div>
                  </div>
                )}
                <div className="flex justify-between py-[24px] items-center text-sm font-normal text-[#717171]">
                  <h2>Sembunyikan nama saya (anonim)</h2>
                  <Switch
                    onChange={() => {
                      setChecked(!checked)
                    }}
                    checked={checked}
                    offColor="#E4E4E4"
                    onColor="#0288D1"
                    checkedIcon={false}
                    uncheckedIcon={false}
                    height={20}
                    width={40}
                    borderRadius={40}
                    boxShadow="0px 1px 3px rgba(0, 0, 0, 0.4)"
                    activeBoxShadow="0px 0px 1px 0px rgba(0, 0, 0, 0.4)"
                  />
                </div>
                <hr className="border-t-[1px] border-solid border-peduly-light mb-6" />
              </div>
              <div className="w-full h-[84px] bg-white flex justify-center items-center max-w-[430px] py-[12px]">
                <span className="w-[90%]">
                  {validator() ? (
                    !click ? (
                      <button
                        className="bg-peduly-primary  text-white font-bold w-full max-w-[374px]  text-[16px] rounded-full h-[60px] "
                        onClick={handleOnSubmit}
                      >
                        Donasi Sekarang
                      </button>
                    ) : (
                      <button className="bg-[#E4E4E4]  text-white font-bold w-full max-w-[374px]  text-[16px] rounded-full h-[60px] pointer-events-none">
                        <Spinner color={'#0288D1'} />
                      </button>
                    )
                  ) : (
                    <button className="bg-[#E4E4E4]  text-white font-bold w-full max-w-[374px]  text-[16px] rounded-full h-[60px] pointer-events-none">
                      Donasi Sekarang
                    </button>
                  )}
                </span>
              </div>
            </form>
          </div>
        </div>
      )}
    </>
  )
}

export default Donasi
